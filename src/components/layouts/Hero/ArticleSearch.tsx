"use client";

import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { z } from "zod";

import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";

import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Search } from "lucide-react";

const formSchema = z.object({
  category: z.string().optional(),
  articles: z.string().optional(),
});

const ArticleSearch = () => {
  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      category: "",
      articles: "",
    },
  });

  async function onSubmit(values: z.infer<typeof formSchema>) {
    console.log("Search Query:", values);
  }

  return (
    <Form {...form}>
      <form
        onSubmit={form.handleSubmit(onSubmit)}
        className="w-full sm:w-fit bg-primary p-2.5 flex flex-col md:flex-row items-center justify-center gap-2 rounded-[12px]"
      >
        <FormField
          control={form.control}
          name="category"
          render={({ field }) => (
            <FormItem className="w-full md:w-[180px]">
              <Select onValueChange={field.onChange} defaultValue={field.value}>
                <FormControl>
                  <SelectTrigger className=" bg-white text-black">
                    <SelectValue placeholder="Select Category" />
                  </SelectTrigger>
                </FormControl>
                <SelectContent>
                  <SelectItem value="cat1">Web</SelectItem>
                  <SelectItem value="mobile">Mobile</SelectItem>
                </SelectContent>
              </Select>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="articles"
          render={({ field }) => (
            <FormItem className="w-full md:w-[400px]">
              <FormControl>
                <div className="w-full h-9 bg-white relative flex items-center rounded-md border focus-within:ring-1 focus-within:ring-ring px-2">
                  <Search className="size-4 text-muted-foreground" />
                  <Input
                    placeholder="Search articles"
                    className="bg-white text-black border-0 focus-visible:ring-0 shadow-none"
                    {...field}
                  />
                </div>
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />
      </form>
    </Form>
  );
};

export default ArticleSearch;

// Generated by Copilot
